.. _interface:

How to use Qibocal?
===================

In this section we present the different commands implemented in ``Qibocal`` and how to use them.

.. image:: qq_qibocal.svg

``qq acquire``
^^^^^^^^^^^^^^

``qq acquire`` is used to perform the data acquisition for each protocol. You can execute the ``qq acquire`` command
using the following syntax:

.. code-block::

    qq acquire <path_to_runcard>

where ``<path_to_runcard>`` is the relative path to runcard, a yaml file containing all the instructions
required to execute a set of protocols. The runcard layout is specified in the :ref:`this <runcard>` section.

The data will be collected in an output folder, in the same directory where the command was executed, with a default name
``YYYY-MM-DD-xxx-username`` where ``xyz`` are three integers starting from ``000`` and ``username`` is the name of the user that
is launching. If a folder with the same name already exists the program will try to create folder where the combination ``xyz``
is incremented by 1, until a new folder is created.

There is also the option to specify the name of the output folder through the ``-o`` option.

.. code-block::

    qq acquire <path_to_runcard> -o <output_folder>

It is possible to overwrite an existing folder using the option ``-f``.

``qq fit``
^^^^^^^^^^

This command is used to perform a post-processing analysis on a given output folder generated by ``qq acquire``.

.. code-block::

    qq fit <output_folder>

If the ``<output-folder>`` already contains post-processing files they can be overwritten using ``-f``.
It is also possible to generate a separate folder with the output folder generated by qibocal with
the updated fitting parameters using ``-o <new_output_folder>``. If such folder exists it can be
overwritten with ``-f``.



``qq report``
^^^^^^^^^^^^^

This command produces an ``index.html`` file inside the output folder which contains a report with all the information
regarding the protocols executed.

.. code-block::

    qq report <output_folder>


``qq auto``
^^^^^^^^^^^

The previous commands are put together using ``qq auto`` which will perform data acquisition, post-processing and report generation.
When executing multiple protocols they are executed following the actions specified in the runcard.

.. code-block::

    qq auto <path_to_runcard> -o <output_folder>

``qq update``
^^^^^^^^^^^^^
Using ``qq update`` it is possible to update the platform calibrated by Qibocal.
The correct syntax is the following

.. code-block::

    qq update <output_folder>

which will copy the configuration of the platform in the corresponding
directory specified using the environment variable  ``QIBOLAB_PLATFORMS``.
See the Qibolab `documentation <https://qibo.science/qibolab/stable/tutorials/lab.html#how-to-connect-qibolab-to-your-lab>`_ for more details.


``qq upload``
^^^^^^^^^^^^^


Using ``qq upload`` it is possible to upload the output folder generated by ``qq`` on this
`web page <http://login.qrccluster.com:9000/>`_, which collects all reports uploaded
by other users as well.


.. code-block::

    qq upload <output_folder>

In order to upload the report to a centralized server, send to the server administrators
your public ssh key (from the machine(s) you are planning to upload the report) and then
use the ``qq upload <output_folder>`` command.
You can also add a tag to be displayed on the server using ``qq upload <output_folder> --tag <tag_name>``.
This program will upload your report to the server and generate an unique URL.


``qq compare``
^^^^^^^^^^^^^


Using ``qq compare`` it is possible to compare together two ``Qibocal`` reports.

.. code-block::

    qq compare <output_folder_1> <output_folder_2>


The folder with the report comparison can be specified with the option ``-o``, otherwise a default
name will be assigned similarly to the ``qq acquire`` command.

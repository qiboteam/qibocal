[tool.poetry]
name = "qibocal"
version = "0.0.4"
description = ""
authors = ["andrea-pasquale <andreapasquale97@gmail.com>"]
license = "Apache License 2.0"
readme = "README.md"
homepage = ""
repository = "https://github.com/qiboteam/qibocal/"
documentation = ""
keywords = []
classifiers = [
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering :: Physics",
]


[tool.poetry.dependencies]
python = ">=3.9,<3.12"
qibolab = "^0.1.2"
qibo = "^0.2.1"
numpy = "^1.24.0"
scipy = "^1.10.1"
pandas = "^1.4.3"
networkx = "^3.0"
pydantic = "^1.10.5"
click = "^8.1.3"
jinja2 = "^3.1.2"
plotly = "^5.15.0"
dash = "^2.6.0"
lmfit = "^1.0.3"
skops = "^0.6.0"
scikit-learn = "^1.2.1"
# Explicit dependency required to cope for dash: https://github.com/plotly/dash/issues/2557
setuptools = "^67.8.0"
# docs dependencies (for readthedocs, https://github.com/readthedocs/readthedocs.org/issues/4912#issuecomment-664002569)
Sphinx = { version = "^5.0.0", optional = true }
furo = { version = "^2023.3.27", optional = true }
sphinxcontrib-bibtex = { version = "^2.4.1", optional = true }
recommonmark = { version = "^0.7.1", optional = true }
sphinx_markdown_tables = { version = "^0.0.17", optional = true }
sphinx-copybutton = { version = "^0.5.1", optional = true }
keras-tuner = { version = "^1.3.0,<1.3.1", optional = true, markers = "sys_platform == 'linux' or sys_platform == 'darwin'" }
matplotlib = { version = "^3.7.0", optional = true }
seaborn = { version = "^0.12.2", optional = true }
pydot = { version = "^1.4.2", optional = true }
tensorflow = { version = "^2.12.0", optional = true, markers = "sys_platform == 'linux' or sys_platform == 'darwin'" }
# TODO: the marker is a temporary solution due to the lack of the tensorflow-io 0.32.0's wheels for Windows, this package is one of
# the tensorflow requirements
skl2onnx = { version = "^1.14.0", optional = true }
onnxruntime = { version = "^1.14.1", optional = true }
onnx = { version = "^1.13.1", optional = true }
pyyaml = "^6.0"
numba = "^0.57.1"


[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pylint = "^2.17"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pytest-env = "^0.8.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "^5.0.0"
furo = "^2023.3.27"
sphinxcontrib-bibtex = "^2.4.1"
recommonmark = "^0.7.1"
sphinx_markdown_tables = "^0.0.17"
sphinx-copybutton = "^0.5.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pdbpp = "^0.10.3"
ipython = "^8.0"
devtools = "^0.10.0"

[tool.poetry.extras]

classify = [
  "tensorflow",
  "keras-tuner",
  "matplotlib",
  "seaborn",
  "skl2onnx",
  "onnxruntime",
  "onnx",
]
docs = [
  "sphinx",
  "furo",
  "sphinxcontrib-bibtex",
  "recommonmark",
  "sphinx_markdown_tables",
  "sphinx-copybutton",
]
viz = ["pydot"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
qq = "qibocal:command"


[tool.poe.tasks]
test = "pytest"
lint = "pylint src/**/*.py -E"
lint-warnings = "pylint src/**/*.py --exit-zero"
docs = "make -C doc html"
docs-clean = "make -C doc clean"
test-docs = "make -C doc doctest"

[tool.pytest.ini_options]
testpaths = ['tests/']
addopts = ['--cov=qibocal', '--cov-report=xml', '--cov-report=html']
env = ["D:NUMBA_DISABLE_JIT=1"]

[tool.pylint.master]
# extensions not to check
extension-pkg-whitelist = ["numpy"]
jobs = 1

[tool.pylint.messages_control]
disable = ["invalid-name", "fixme"]
extension-pkg-whitelist = "pydantic"

[tool.pylint.reports]
# Available formats are:
# text, parseable, colorized, json and msvs (visual studio).
output-format = "colorized"

[tool.pylint.format]
# Maximum number of characters on a single line.
max-line-length = 100

[tool.pylint.design]
# Maximum number of arguments for function / method
max-args = 10
